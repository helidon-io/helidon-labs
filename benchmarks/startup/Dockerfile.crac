#
# Copyright (c) 2025 Oracle and/or its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# syntax=docker/dockerfile:1.7-labs
FROM helidon/benchmark-startup-base AS benchmark

WORKDIR /usr/share

ENV JDK_URL="https://cdn.azul.com/zulu/bin"
ENV DOWNLOAD_URL="$JDK_URL/zulu23.32.11-ca-crac-jdk23.0.2-linux_x64.tar.gz"
ENV JAVA_HOME=/usr/share/jdk-23/zulu23.32.11-ca-crac-jdk23.0.2-linux_x64

# Install ZULU
RUN wget -O crac-jdk.tar.gz ${DOWNLOAD_URL} && \
    mkdir -p /usr/share/jdk-23 && \
    tar zxf ./crac-jdk.tar.gz -C /usr/share/jdk-23 && \
    ln -sf $JAVA_HOME/bin/java /bin/ && \
    ln -sf $JAVA_HOME/bin/jcmd /bin/ && \
    ln -sf $JAVA_HOME/bin/jps /bin/

WORKDIR /helidon

ARG FLAVOR=mp
ENV FLAVOR=$FLAVOR

ADD ${FLAVOR}-bench-app/pom.xml .
ADD ${FLAVOR}-bench-app/src src
RUN mvn package -Pcrac -DskipTests

ARG WARMUP_CACHEBUST=1

ENV RESTORED_PATTERN_MP="Restored all channels"
ENV RESTORED_PATTERN_SE="Restored all channels"

# Do the snapshot
RUN <<END_OF_SCRIPT
cat <<EOF > after-warmup.sh
#!/bin/bash -e
echo "Trigger the checkpoint"
# Trigger the checkpoint
jcmd \$PID JDK.checkpoint
EOF
END_OF_SCRIPT

# AOT build and warmup
RUN <<END_OF_SCRIPT
cat <<EOF > aot-build.sh
#!/bin/bash
java -XX:CPUFeatures=generic \
    -XX:CRaCEngine=warp \
    -XX:CRaCCheckpointTo=./cr \
    -jar ./target/benchmark.jar |& tee helidon-warmup.log &
PID="\$(jcmd | grep ".jar" | awk '{print \$1}')"
source warmup.sh
EOF
END_OF_SCRIPT

# Run AOT script and measure time
RUN /usr/bin/time -f "$AOT_TIME_FORMAT" -o $AOT_TIME_FILE bash aot-build.sh

# Runtime benchmark
RUN <<END_OF_SCRIPT
cat <<EOF > run.sh
#!/bin/bash -e
java \
-XX:CRaCEngine=warp \
-XX:CRaCRestoreFrom=/helidon/cr \
-jar ./target/benchmark.jar |& tee helidon-run.log &

PID="\$(jcmd | grep "jar" | awk '{print \$1}')"

source benchmark.sh
EOF
END_OF_SCRIPT

CMD ["/bin/bash", "run.sh"]

